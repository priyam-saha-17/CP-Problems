Grid Play

Hard

Problem link:- https://www.codingninjas.com/studio/contests/weekend-contest-99/10253414/problems/27819?leftPanelTab=1&leftPanelTabValue=PROBLEM

==================================================================================================================




from typing import List
import numpy as np
def canBeHappy(n: int, m: int, q: int, v: List[List[int]], queries: List[List[int]]) -> List[int]:
    dp = np.zeros([n, m], dtype = int)
    for i in range(len(v)):
        for j in range(len(v[0])):
            if i!=0 and j!=0:
                if (v[i-1][j]%2) != (v[i][j-1]%2):
                    dp[i][j] = 1

    ans = []
    for query in queries:
        w = query[0]
        x = query[1]
        y = query[2]
        z = query[3]
        count = 0
        for i in range(w+1, y+1):
            for j in range(x+1, z+1):
                if dp [i][j] == 1:
                    count += 1
                    break
            if count == 1:
                break
        if count == 1:
            ans.append(1)
            continue
        ans.append(0)
    return ans



    